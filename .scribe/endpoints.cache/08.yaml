## Autogenerated by Scribe. DO NOT MODIFY.

name: 'User management'
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/users
    metadata:
      title: 'Create user'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: gaqjinewhpwvaczpwgbapjihorgqbbisszkcvssqvymtschfoagjjuaoagvqflfrxvupgzgigqubnjvqgjtgzivnkhyxtjvoerlq
        type: string
        custom: []
      email:
        name: email
        description: 'Must be a valid email address. Must not be greater than 255 characters.'
        required: true
        example: eleiackgairxavtpfpunswuvmttfbh
        type: string
        custom: []
      password:
        name: password
        description: 'Must be at least 6 characters.'
        required: true
        example: ojfmj
        type: string
        custom: []
      roles:
        name: roles
        description: ''
        required: false
        example:
          - null
        type: 'string[]'
        custom: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'api/users/{user_id}'
    metadata:
      title: 'Show user'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 14
        type: integer
        custom: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":1,"name":"Admin","email":"admin@test.com"}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '51'
          access-control-allow-origin: '*'
        description: null
    responseFields: []
  -
    httpMethods:
      - POST
    uri: 'api/users/{user_id}'
    metadata:
      title: 'Edit user'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 19
        type: integer
        custom: []
    queryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: xfjpofluxjqzldkcy
        type: string
        custom: []
      email:
        name: email
        description: 'Must be a valid email address. Must not be greater than 255 characters.'
        required: true
        example: vxuevfzlswdriblgoqrfpefqmbubpd
        type: string
        custom: []
      password:
        name: password
        description: 'Must be at least 6 characters.'
        required: true
        example: gpwdj
        type: string
        custom: []
      roles:
        name: roles
        description: ''
        required: false
        example:
          - null
        type: 'string[]'
        custom: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - DELETE
    uri: 'api/users/{user_id}'
    metadata:
      title: 'Delete user'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 18
        type: integer
        custom: []
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/users
    metadata:
      title: 'Get users'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":1,"name":"Admin","email":"admin@test.com"},{"id":2,"name":"Normal User","email":"user@test.com"},{"id":3,"name":"Evalyn Schmeler","email":"schulist.terrence@example.net"},{"id":4,"name":"Ethan Schneider","email":"santos29@example.org"},{"id":5,"name":"Clinton Jacobson","email":"johathan29@example.net"},{"id":6,"name":"Lucile Jakubowski","email":"reed12@example.org"},{"id":7,"name":"Dillan Wilkinson","email":"beatty.jazmyn@example.org"},{"id":8,"name":"Halie Lang PhD","email":"tyler.dibbert@example.net"},{"id":9,"name":"Prof. Shayna Dicki DDS","email":"roy78@example.net"},{"id":10,"name":"Prof. Coby Dicki","email":"fisher.cyril@example.com"},{"id":11,"name":"Leif Boyle","email":"sjones@example.com"},{"id":12,"name":"Mina Becker","email":"robb.kreiger@example.org"},{"id":13,"name":"Rashawn Abbott","email":"btorp@example.net"},{"id":14,"name":"Talia Hettinger","email":"mcasper@example.com"},{"id":15,"name":"Dr. Noah O''Keefe","email":"osborne.berge@example.org"}],"links":{"first":"http:\/\/127.0.0.1:8000\/api\/users?page=1","last":"http:\/\/127.0.0.1:8000\/api\/users?page=4","prev":null,"next":"http:\/\/127.0.0.1:8000\/api\/users?page=2"},"meta":{"current_page":1,"from":1,"last_page":4,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"http:\/\/127.0.0.1:8000\/api\/users?page=1","label":"1","active":true},{"url":"http:\/\/127.0.0.1:8000\/api\/users?page=2","label":"2","active":false},{"url":"http:\/\/127.0.0.1:8000\/api\/users?page=3","label":"3","active":false},{"url":"http:\/\/127.0.0.1:8000\/api\/users?page=4","label":"4","active":false},{"url":"http:\/\/127.0.0.1:8000\/api\/users?page=2","label":"Next &raquo;","active":false}],"path":"http:\/\/127.0.0.1:8000\/api\/users","per_page":15,"to":15,"total":54}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '52'
          access-control-allow-origin: '*'
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/users/profile/likes
    metadata:
      title: 'List posts like of user'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/users/profile/reports
    metadata:
      title: 'List posts report of user'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
    responseFields: []
